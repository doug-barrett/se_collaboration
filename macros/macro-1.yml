fileVersion: 1
id: "1"
macroString: |+
  {%- macro row_number(order_by, partition_by=[], order='') -%}
      ROW_NUMBER() OVER (
          {%- for p_col in partition_by %}
              {%- if loop.first %} PARTITION BY {% endif %}
                  {{- p_col -}}
              {%- if not loop.last %}, {% endif -%}
          {%- endfor -%}
          {%- for o_col in order_by -%}
              {%- if loop.first %} ORDER BY {% endif -%}
                  {{- o_col -}}
              {%- if not loop.last %}, {% endif -%}
          {%- endfor -%}
          {% if order != '' %} {{order}}{%- endif %} )
  {%- endmacro -%}



  {%- macro hash(columns, algo='MD5', delimiter='||', length=32) -%}
      {%  for column in columns %}
          {%- if loop.first %}CAST( {{ algo }}({% endif -%}
              NVL(CAST({{ column }} AS VARCHAR), 'null')
          {%- if not loop.last %} || {% if delimiter != '' %} '{{ delimiter }}' || {% endif -%} {% endif -%}
          {%- if loop.last %}) AS CHAR({{ length }}) ){% endif -%}
      {%  endfor %}
  {%- endmacro -%}


  {%- macro even_odd(column) -%}
      CASE WHEN MOD({{ column }}, 2) = 0 THEN 'EVEN' ELSE 'ODD' END
  {%- endmacro %}


  {%- macro date_sk(column) -%}
      TO_NUMBER(TO_CHAR({{ column }}, 'YYYYMMDD'))
  {%- endmacro %}


  {%- macro replacer(column) -%}
      {% set ns = namespace(col=column) %}
      {% for p in parameters.replace %}
          {% set ns.col = ns.col | replace(p.long,  p.short) %}
      {% endfor %}
      {{ ns.col }}
  {%- endmacro %}

  {#-- ************************************************************************************************* #}
  {#-- Testing templates #}
  {#-- ************************************************************************************************* #}


  {#-- Uniqueness #}
  {#-- Eg {{ test_uniqueness(["L_ORDERKEY","L_LINENUMBER"])}} #}

  {%- macro test_uniqueness(columns=[]) -%}
      select 1 
      from {{this}} 
      group by 
          {% for col in columns %}{{col}}{% if not loop.last %},{% endif %}{% endfor %}
      having count(1) > 1
  {%- endmacro %}


  {#-- Contains #}
  {#-- Eg {{ test_contains( "O_COMMENT", "TESTING") }}  #}

  {%- macro test_contains(column, text) -%}
      select 1 
      from {{this}} 
      where upper({{column}}) like '%' || upper('{{text}}') || '%'
  {%- endmacro %}

  {#-- Range #}

  {%- macro test_range(column, lower, upper) -%}
      select 1 
      from {{this}} 
      where not {{column}} between {{lower}} and {{upper}}
  {%- endmacro %}

  {#-- Rowcount #}
  {#-- Eg {{ test_rowcount( "FROM {{ref('SRC_SAMPLE','LINEITEM')}}") }} #}

  {%- macro test_rowcount(sql_from) -%}
      select 1
      from (select count(*) rc from {{this}} ) this
      where rc <> (select nvl(count(*),0) {{sql_from}} )
  {%- endmacro %}

  {#-- Ref Integrity #}
  {#-- Eg {{ test_ref_integrity("O_CUSTKEY", "C_CUSTKEY","{{ref('DWH','DIM_CUSTOMER')}}") }} #}

  {%- macro test_ref_integrity(column, ref_table_col, ref_table) -%}
      select 1
      from {{this}} 
      where {{column}} not in (select distinct {{ref_table_col}} from {{ref_table}} )
  {%- endmacro %}

name: macro
type: Macro
