fileVersion: 1
id: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
name: TMP_COVERAGE_TEMP
operation:
  config:
    insertStrategy: UNION
    selectDistinct: false
  database: ""
  deployEnabled: true
  description: ""
  isMultisource: false
  locationName: TGT_HL
  materializationType: view
  metadata:
    appliedNodeTests: []
    columns:
      - appliedColumnTests: {}
        columnReference:
          columnCounter: dc21699a-624f-4045-b6a7-375e94960daa
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: CONTACT_ID
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: fad98d1e-5ac5-402e-acdd-4604294b2fc8
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: LOGIN_ID
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 6ab5f7fc-9975-4517-96a0-c3ac1724e6bb
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: FULL_NAME
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 82d1f1d7-f6c8-474c-9495-f087295657e5
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COVERAGETEAM_ID
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: edeb33ac-220d-4d82-a488-45018f5e39ad
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: LINE_OF_BUSINESS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 61b22f6b-3310-4988-8ecc-d579feb644d3
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: TITLE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 3ac9d67a-bcf3-46bc-8dd3-b561091c8bb0
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: OFFICE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 7d6de006-b254-432e-9f5b-258236042130
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: INDUSTRY_UMBRELLA_REPORTING
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 23d8423e-a6b5-4c5c-9a8d-bf1715603b3b
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: CF_STAFF_INDUSTRY
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: b61c7470-c281-4809-b83e-daa1298de65b
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COVERAGE_LEVEL
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 41e52c86-36ef-430b-97ef-0d649234190d
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_ID
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 82e30ba1-a851-4e61-bd3d-41ec7913ea23
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: WEBSITE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: d735eaba-e15f-4fa9-9e8f-6190f92c2f2f
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COCOVERAGEOFFICER
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: |-
              TRIM(REPLACE(CoCoverageOfficer.COMBINED_COVERAGE_OFFICER, CONCAT (
                                  CONCAT (
                                      LEFT(HLEmployee.FULL_NAME, CHARINDEX(',', HLEmployee.FULL_NAME) - 1)
                                      ,'('
                                      ,SFCoverage.TIER_C
                                      )
                                  ,')'
                                  ,CASE 
                                      WHEN UPPER(SFCoverage.COVERAGE_LEVEL_C) = UPPER('Primary')
                                          THEN '*'
                                      ELSE ''
                                      END
                                  ,''
                                  )))
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 2c7e802e-1a87-432c-8c32-a18c5fde4f8a
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: PRIMARY_COVERAGE_OFFICER
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 29946776-bef9-45bc-a7ce-3188c21d3639
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: OTHER_COVERAGE_OFFICER
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 7ba218fb-68b2-441b-8347-3a44e92d856c
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_RECORDTYPE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 660f907e-3348-402e-b1f7-2bebafedcdb4
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_COVERAGE_STATUS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: b9a9ca95-a2ba-4cf0-a0cf-b56d5002a5c5
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COVERAGE_TEAM_STATUS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: f1711d20-cb43-47c0-8324-e14a23570959
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_NAME
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 004ae2aa-aeb9-41b0-9512-2d7cffefbb8d
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_DESCRIPTION
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: f07a84c3-fc28-447d-9744-0247e1faafbd
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_CITY
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 940e03f6-2065-4f0f-a2a9-fbd66214c230
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_COUNTRY
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 612cc04a-4f4d-499a-8fa6-3a4b3ace40ec
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: LOCATION
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: df7a1505-ed4b-4c9a-9ee9-5e4e98b4574e
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: REGION
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: d3d90354-e472-4b66-b3ff-dffd09c0abb8
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: PARENT_SPONSOR_COMPANY_COMBINED
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 68e20c17-6b77-4942-a53b-003a899b4df5
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: FS_COVERAGE_OFFICER
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 9134637d-f426-466a-9204-e1cdd676c88b
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: FS_COVERAGE_OFFICER_COMBINED
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: a361ba5e-a6b4-4c24-ad97-af6d26a8a524
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: SPONSOR_INVESTMENT_DATE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 1107fc0b-f793-4e20-8051-0c7a7bc4ba9c
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_INDUSTRY
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 95e61de4-2f1e-4086-8390-77f57fadddb4
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_PRIMARY_SECTOR
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 9ad6c135-4ccd-438c-ae42-9cd8254cc1d0
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(1)
        description: ""
        hashDetails: null
        name: COMPANY_SECONDARY_SECTOR
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 93703d13-bdf2-4fca-a24b-684c44823b7a
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(1)
        description: ""
        hashDetails: null
        name: COMPANY_SECTOR
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 90033811-6196-4ed9-8bc9-b6b5ab9da791
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_NOTES
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 9fc15507-92ac-4cef-a854-44e1be5cb033
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_OWNERSHIP
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: c7622dca-cc4e-49bd-af94-7e13754785d1
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: OWNERSHIP
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: c1e9bfc9-e075-470c-a1e9-3fa29f64228b
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(38,0)
        description: ""
        hashDetails: null
        name: COMPANY_REVENUE_MM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 36caaa48-1b23-430f-a5cc-8418c5f4851d
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(38,0)
        description: ""
        hashDetails: null
        name: COMPANY_RECENT_REVENUE_MM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 9e0ba136-cc60-4f04-aac2-977abafe5022
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(38,0)
        description: ""
        hashDetails: null
        name: COMPANY_EV_MM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 7896c51b-6675-4879-897e-cd52b50a726e
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(38,0)
        description: ""
        hashDetails: null
        name: COMPANY_RECENT_EV_MM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: f6e16176-52a4-4d8f-843a-235263abdd90
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(38,0)
        description: ""
        hashDetails: null
        name: COMPANY_EBITDA_MM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 401cd511-a0e7-4992-a05d-23464ad91263
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(38,0)
        description: ""
        hashDetails: null
        name: COMPANY_RECENT_EBITDA_MM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: d84edb38-bc7d-4a7c-94ea-535fa1652e5a
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_CURRENCYCODE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 7a514b7f-32e2-42f9-acbe-020bce78a8a3
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_TIER
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: e03093fb-9f66-4ef1-ba99-4379ff5fa7dd
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: COMPANY_PRIORITY
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: db93cffb-db6b-4724-914a-dc49ce49c65a
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: ARRANGED_BY_R_D__C
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 2bb0b29a-09cc-4a90-946a-585ff6fad525
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: DATE
        description: ""
        hashDetails: null
        name: INTRO_CONVERSATION_OCCURRED_DATE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 85bacd4d-a7e0-4811-afeb-84eed0bb4dc4
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: DATE
        description: ""
        hashDetails: null
        name: INTRO_CALL_BOOKED_DATE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: df728ce2-1e4c-481e-bd4f-0f8b7b494d02
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(24)
        description: ""
        hashDetails: null
        name: CALLS_BOOKED_VIA_ACE_DEV_TEAM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 61c800a9-8adb-4c8b-9b7e-143859e6b0d6
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: NO_OF_INTROS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 352716f5-282e-4633-a973-57124c43122f
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: DATE
        description: ""
        hashDetails: null
        name: COMPANY_TARGET_TRANSACTION_DATE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 459bab05-cfd3-4a85-9ba8-eed26065eb57
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: DATE
        description: ""
        hashDetails: null
        name: COMPANY_TARGET_ENGAGEMENT_DATE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 286882d7-5526-42eb-9141-97f0c66c8bad
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(18,0)
        description: ""
        hashDetails: null
        name: ACTIVITY_WITHIN_7DAYS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 5efe1317-ba8e-4435-b48f-4abf15d2779e
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(18,0)
        description: ""
        hashDetails: null
        name: ACTIVITY_WITHIN_30DAYS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 77a4cc5f-c88a-4c47-b372-9567e4c0dd33
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(18,0)
        description: ""
        hashDetails: null
        name: ACTIVITY_WITHIN_90DAYS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 75abb300-3a75-4c3c-b9af-a786d544f81f
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(18,0)
        description: ""
        hashDetails: null
        name: ACTIVITY_WITHIN_180DAYS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 9509b7eb-f012-4876-96d5-953bd60577bc
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(18,0)
        description: ""
        hashDetails: null
        name: ACTIVITY_WITHIN_365DAYS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 121c8830-2aa2-4da4-bd03-4fb9975a69fa
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(18,0)
        description: ""
        hashDetails: null
        name: FUTURE_ACTIVITY
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: e8bc224e-1a06-4ae2-8f50-253f5fc266db
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: LAST_ACTIVITY
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 105c8bc7-ca6a-4c6e-aefc-aa698bf5fdf4
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: LAST_ACTIVITY_SYNOPSIS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 9c967e10-3ea6-445c-9940-144d4e2fa87b
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: LAST_ACTIVITY_ID
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: c76c05a8-4524-4229-959d-73841ce1204a
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(1)
        description: ""
        hashDetails: null
        name: CURRENCY_SYMBOL
        nullable: false
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 874e17e2-826f-4658-945f-ddff48ef0f24
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: SPONSOR_RANKING
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 68fce080-b50f-495b-a8ae-33f8d07e9e5c
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: INVESTMENT_CONTACTS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: cd8f9a58-50a6-4dae-90b1-f9ad2bc8b1ba
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: CLIENT_CONTACTS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 3ca39643-4de1-4351-b517-30c888aa50a4
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: NEXT_STEPS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 48b3b073-d5b3-499e-93d4-60e31b74c3b5
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: WINNING_MANDATE_DESC
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 94ef7933-10e2-47b4-808b-891cceb4fb72
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(6,0)
        description: ""
        hashDetails: null
        name: WINNING_MANDATE_POINTS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 5dae47fe-e0c8-404b-9186-c2817ee357e0
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(1,0)
        description: ""
        hashDetails: null
        name: PE_ATTENDED_PLATINUM_EVENT
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 69bfc5b0-3593-416b-aa25-324315b69273
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(1,0)
        description: ""
        hashDetails: null
        name: MET_WITH_SPONSOR_DEAL_TEAM
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: cd8e8284-7ea9-4d46-a306-b6f5ba38f3c4
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(1,0)
        description: ""
        hashDetails: null
        name: MET_MANAGEMENT
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 08619481-2936-40bf-9d28-04814270dd07
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(1,0)
        description: ""
        hashDetails: null
        name: PRESENTED_AT_CONFERENCE
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 52e8d2d3-cb59-427d-aa09-85b8eae78933
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(1,0)
        description: ""
        hashDetails: null
        name: MARKET_MAPS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 2820b033-b962-4ac0-a2d0-203c2f6f62a6
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(1,0)
        description: ""
        hashDetails: null
        name: DISCUSSED_CAPITAL_MARKETS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: fc58c09c-90ab-4c92-bb63-4b6c35894c6f
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: NUMBER(38,0)
        description: ""
        hashDetails: null
        name: EV_MM_USD
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: aebcde49-b1a4-4cac-8cda-78b777520164
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(16777216)
        description: ""
        hashDetails: null
        name: EXPECTED_PRODUCTS
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 49780aca-35cc-4306-b341-5874a577769c
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(1)
        description: ""
        hashDetails: null
        name: PRIMARY_SECTOR
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 5a4c1d30-6150-4382-8712-bbff4560438a
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(1)
        description: ""
        hashDetails: null
        name: SECONDARY_SECTOR
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
      - appliedColumnTests: {}
        columnReference:
          columnCounter: 95f76a5e-ea73-4062-a0d2-0cbdc9323d9b
          stepCounter: f93a222a-2aea-4377-b7d7-cf8d5c5a9bb6
        config: {}
        dataType: VARCHAR(1)
        description: ""
        hashDetails: null
        name: TERTIARY_SECTOR
        nullable: true
        sourceColumnReferences:
          - columnReferences: []
            transform: ""
    cteString: ""
    enabledColumnTestIDs: []
    sourceMapping:
      - aliases: {}
        customSQL:
          customSQL: |-
            {{ stage('Override Create SQL') }}
            	CREATE OR REPLACE VIEW {{ ref('TGT_HL', 'TMP_COVERAGE_TEMP')}} AS (
                SELECT DISTINCT HLEmployee.HL_ID AS CONTACT_ID
                    ,HLEmployee.LOGIN_ID__C AS LOGIN_ID
                    ,HLEmployee.FULL_NAME AS FULL_NAME
                    ,SFCoverage.ID AS CoverageTeam_ID
                    ,HLEmployee.LINE_OF_BUSINESS AS LINE_OF_BUSINESS
                    ,HLEmployee.TITLE AS TITLE
                    ,HLEmployee.OFFICE AS OFFICE
                    ,HLEmployee.INDUSTRY_UMBRELLA_REPORTING AS INDUSTRY_UMBRELLA_REPORTING
                    ,HLEmployee.CF_STAFF_INDUSTRY AS CF_STAFF_INDUSTRY
                    ,SFCoverage.COVERAGE_LEVEL_C AS COVERAGE_LEVEL
                    ,SFCoverage.COMPANY_C AS Company_ID
                    ,SFCompany.WEBSITE AS WEBSITE
                    ,TRIM(REPLACE(CoCoverageOfficer.COMBINED_COVERAGE_OFFICER, CONCAT (
                                CONCAT (
                                    LEFT(HLEmployee.FULL_NAME, CHARINDEX(',', HLEmployee.FULL_NAME) - 1)
                                    ,'('
                                    ,SFCoverage.TIER_C
                                    )
                                ,')'
                                ,CASE 
                                    WHEN UPPER(SFCoverage.COVERAGE_LEVEL_C) = UPPER('Primary')
                                        THEN '*'
                                    ELSE ''
                                    END
                                ,''
                                ))) AS CoCoverageOfficer
                    ,TRIM(REPLACE(CoCoverageOfficer.PRIMARY_COVERAGE_OFFICER, CONCAT (
                                CONCAT (
                                    LEFT(HLEmployee.FULL_NAME, CHARINDEX(',', HLEmployee.FULL_NAME) - 1)
                                    ,'('
                                    ,SFCoverage.TIER_C
                                    )
                                ,')'
                                ,CASE 
                                    WHEN UPPER(SFCoverage.COVERAGE_TEAM_STATUS_C) = UPPER('Active')
                                        AND UPPER(SFCoverage.COVERAGE_LEVEL_C) = UPPER('Primary')
                                        THEN '*'
                                    ELSE ''
                                    END
                                ,''
                                ))) AS PRIMARY_COVERAGE_OFFICER
                    ,TRIM(REPLACE(CoCoverageOfficer.OTHER_COVERAGE_OFFICER, CONCAT (
                                CONCAT (
                                    LEFT(HLEmployee.FULL_NAME, CHARINDEX(',', HLEmployee.FULL_NAME) - 1)
                                    ,'('
                                    ,SFCoverage.TIER_C
                                    )
                                ,')'
                                ,CASE 
                                    WHEN UPPER(SFCoverage.COVERAGE_TEAM_STATUS_C) = UPPER('Active')
                                        AND UPPER(SFCoverage.COVERAGE_LEVEL_C) = UPPER('Primary')
                                        THEN '*'
                                    ELSE ''
                                    END
                                ,''
                                ))) AS OTHER_COVERAGE_OFFICER
                    ,CASE 
                        WHEN UPPER(SFCompany.RECORD_TYPE_ID) = UPPER('012i0000000tEhAAAU')
                            THEN 'Operating Company'
                        WHEN UPPER(SFCompany.RECORD_TYPE_ID) LIKE UPPER('012i0000000tEhFAAU%')
                            THEN 'Capital Provider'
                        ELSE SFCompany.RECORD_TYPE_ID
                        END AS Company_RecordType
                    ,COALESCE(SFCoverage.COMPANY_COVERAGE_STATUS_C, '') AS COMPANY_COVERAGE_STATUS
                    ,SFCoverage.COVERAGE_TEAM_STATUS_C AS COVERAGE_TEAM_STATUS
                    ,SFCompany.NAME AS Company_Name
                    ,CASE
                        WHEN SFCompany.DESCRIPTION IS NOT NULL THEN ''
                        ELSE NULL
                        END AS Company_Description
                    ,TO_VARCHAR(SFCompany.BILLING_CITY) AS Company_City
                    ,TO_VARCHAR(SFCompany.BILLING_COUNTRY) AS Company_Country
                    ,CASE 
                        WHEN SFCompany.BILLING_CITY IS NULL
                            THEN SFCompany.BILLING_COUNTRY_CODE
                        ELSE CONCAT (
                                SFCompany.BILLING_CITY
                                ,','
                                ,SFCompany.BILLING_COUNTRY_CODE
                                )
                        END AS LOCATION
                    ,REGION_MAPPING.REGION AS REGION
                    ,CASE 
                        WHEN FSCG1.COMBINED_PE_NAME IS NOT NULL
                            THEN FSCG1.COMBINED_PE_NAME
                        ELSE COALESCE(SFParentCompany.NAME, '')
                        END AS PARENT_SPONSOR_COMPANY_Combined
                    ,COALESCE(FSCG.FS_COVERAGE_OFFICER, '') AS FS_Coverage_Officer
                    ,COALESCE(FSCG2.COMBINED_FS_COVERAGE_OFFICER, '') AS FS_Coverage_Officer_Combined 
                    ,FSCG1.INVESTMENT_DATE AS Sponsor_Investment_Date
                    ,CASE 
                        WHEN SFCoverage.COVERAGE_TYPE_C IS NOT NULL
                            THEN SFCoverage.COVERAGE_TYPE_C
                        ELSE COALESCE(SFCompany.INDUSTRY_UMBRELLA_REPORTING_C, '')
                        END AS Company_INDUSTRY
                    ,REPLACE(COVERAGESECTOR.PRIMARY_SECTOR_C, ' ', '') AS Company_PRIMARY_SECTOR
                    ,COALESCE(LEFT(COVERAGESECTOR.SECONDARY_SECTOR_C,80), '') AS COMPANY_SECONDARY_SECTOR
                    ,COALESCE(LEFT(COVERAGESECTOR.PRIMARY_SECTOR_C,80), '') AS Company_SECTOR
                    ,TO_VARCHAR(COALESCE(SFCoverage.DESCRIPTION_C, '')) AS Company_Notes
                    ,CASE 
                        WHEN UPPER(SFCompany.OWNERSHIP) LIKE UPPER('%public%')
                            THEN 'Public'
                        WHEN SFCompany.TICKER_SYMBOL <> ''
                            THEN 'Public'
                        WHEN SFCompany.TICKER_SYMBOL IS NOT NULL
                            THEN 'Public'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (
                                 UPPER('ESOP')
                                ,UPPER('Family Owned')
                                ,UPPER('Management')
                                ,UPPER('Not for Profit')
                                ,UPPER('Private')
                                )
                            THEN 'Private'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (
                                UPPER('Family Office')
                                ,UPPER('Hedge Fund')
                                ,UPPER('Private Equity Group')
                                )
                            THEN 'PE'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (UPPER('Government'))
                            THEN 'Other'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (
                                UPPER('Public Debt')
                                ,UPPER('Public Equity')
                                )
                            THEN 'Public'
                        WHEN SFCompany.OWNERSHIP IS NULL
                            OR SFCompany.OWNERSHIP = ''
                            THEN 'Other'
                        ELSE SFCompany.OWNERSHIP
                        END Company_Ownership
                    ,SFCompany.OWNERSHIP AS Ownership
                    ,SFCompany.REVENUE_MM_C AS Company_Revenue_MM 
                    ,SFCompany.RECENT_REVENUE_MM_C AS Company_RECENT_REVENUE_MM 
                    ,IFNULL(SFCompany.RECENT_EV_MM_C , 0) AS Company_EV_MM
                    ,IFNULL(SFCompany.RECENT_EV_MM_C ,0) AS Company_RECENT_EV_MM 
                    ,SFCompany.EBITDA_MM_C AS Company_EBITDA_MM 
                    ,SFCompany.RECENT_EBITDA_MM_C AS Company_RECENT_EBITDA_MM 
                    ,SFCompany.CURRENCY_ISO_CODE AS Company_CurrencyCode
                    ,SFCoverage.TIER_C AS Company_TIER
                    ,COALESCE(SFCoverage.PRIORITY_C, '') AS Company_PRIORITY
                    ,COALESCE(SFCoverage.ARRANGED_BY_R_D_C, '') AS ARRANGED_BY_R_D__C
                    ,SFCoverage.INTRO_CONVERSATION_OCCURRED_DATE_C AS INTRO_CONVERSATION_OCCURRED_DATE
                    ,SFCOVERAGE.PROFILE_DATE_COMPLETED_C AS INTRO_CALL_BOOKED_DATE
                    ,CASE 
                        WHEN UPPER(ARRANGED_BY_R_D_C) = UPPER('Yes')
                            AND (
                                SFCoverage.INTRO_CONVERSATION_OCCURRED_DATE_C IS NULL
                                AND SFCOVERAGE.PROFILE_DATE_COMPLETED_C IS NULL
                                )
                            THEN 'Contacted'
                        WHEN UPPER(ARRANGED_BY_R_D__C) = UPPER('Yes')
                            AND (
                                SFCoverage.INTRO_CONVERSATION_OCCURRED_DATE_C IS NOT NULL
                                OR SFCOVERAGE.PROFILE_DATE_COMPLETED_C IS NOT NULL
                                )
                            THEN 'Contacted + Intro Booked'
                        ELSE 'Not Contacted'
                        END AS CALLS_BOOKED_VIA_ACE_DEV_TEAM
                    ,CASE 
                        WHEN ARRANGED_BY_R_D__C = 'Yes'
                            THEN SFCoverage.ID
                        END AS NO_OF_INTROS
                    ,SFCoverage.TARGET_TRANSACTION_DATE_C AS Company_Target_Transaction_Date
                    ,SFCoverage.TARGET_ENGAGEMENT_DATE_C AS Company_Target_Engagement_Date
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_7DAYS, 0) AS ACTIVITY_WITHIN_7DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_30DAYS, 0) AS ACTIVITY_WITHIN_30DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_90DAYS, 0) AS ACTIVITY_WITHIN_90DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_180DAYS, 0) AS ACTIVITY_WITHIN_180DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_365DAYS, 0) AS ACTIVITY_WITHIN_365DAYS
                    ,COALESCE(CoverageActivity1.Future_Activity, 0) AS Future_Activity
                    ,MAX(TO_VARCHAR(CoverageActivity1.Activity_Date, 'YYYY-MM-DD')) OVER (
                        PARTITION BY HLEmployee.FULL_NAME
                        ,SFCoverage.COMPANY_C
                        ) AS Last_Activity
                    ,MAX(CoverageActivity1.Activity_Internal_Notes) OVER (
                        PARTITION BY HLEmployee.FULL_NAME
                        ,SFCoverage.COMPANY_C
                        ) AS Last_Activity_Synopsis
                    ,MAX(CoverageActivity1.Event_ID) OVER (
                        PARTITION BY HLEmployee.FULL_NAME
                        ,SFCoverage.COMPANY_C
                        ) AS Last_Activity_ID
                    ,EXCHANGE_RATE.currencysymbol AS CURRENCY_SYMBOL
                    ,SPONSOR_RANKING.COMBINED_SPONSOR_RANKING AS SPONSOR_RANKING
                    ,INVESTMENT_CONTACTS.INVESTMENT_CONTACTS AS INVESTMENT_CONTACTS
                    ,CLIENT_CONTACTS.CLIENT_CONTACTS AS CLIENT_CONTACTS
                    ,CONCAT (
                        IFNULL(INITIALS, '')
                        ,'-'
                        ,SFCoverage.NEXT_STEPS_C
                        ) AS NEXT_STEPS
                    ,WINNING_MANDATE_DESC AS WINNING_MANDATE_DESC
                    ,WINNING_MANDATE_POINTS AS WINNING_MANDATE_POINTS
                    ,PE_ATTENDED_PLATINUM_EVENT AS PE_ATTENDED_PLATINUM_EVENT
                    ,MET_WITH_SPONSOR_DEAL_TEAM AS MET_WITH_SPONSOR_DEAL_TEAM
                    ,MET_MANAGEMENT AS MET_MANAGEMENT
                    ,PRESENTED_AT_CONFERENCE AS PRESENTED_AT_CONFERENCE
                    ,MARKET_MAPS_POINTS AS MARKET_MAPS
                    ,DISCUSSED_CAPITAL_MARKETS_POINTS AS DISCUSSED_CAPITAL_MARKETS
                    ,IFNULL(SFCompany.RECENT_EV_MM_C, 0) * RATE2BASE AS EV_MM_USD
                    ,REPLACE(TO_VARCHAR(SFCoverage.EXPECTED_PRODUCTS_C), ';', '\\\\\\\\n') AS EXPECTED_PRODUCTS
                    ,COVERAGESECTOR.PRIMARY_SECTOR_C AS PRIMARY_SECTOR
                    ,COVERAGESECTOR.SECONDARY_SECTOR_C AS SECONDARY_SECTOR
                    ,COVERAGESECTOR.TERTIARY_SECTOR_C AS TERTIARY_SECTOR
                FROM {{ref('TGT_HL','TMP_HLEMPLOYEE')}} AS HLEmployee
                LEFT JOIN {{ref('TGT_HL','VW_COVERAGE_TEAM_C')}} AS SFCoverage 
                    ON HLEmployee.HL_ID = SFCoverage.OFFICER_C
                    AND UPPER(SFCoverage.COVERAGE_TEAM_STATUS_C) = UPPER('Active')
                INNER JOIN {{ref('TGT_HL','VW_ACCOUNT')}} AS SFCompany 
                    ON SFCoverage.COMPANY_C = SFCompany.ID
                INNER JOIN {{ref('TGT_HL','TMP_EXCHANGERATES')}} AS EXCHANGE_RATE 
                        ON SFCompany.CURRENCY_ISO_CODE = EXCHANGE_RATE.CURRENCY
                LEFT JOIN {{ref('TGT_HL','VW_COVERAGE_CONTACT_C')}} AS SFCoverageContact  
                    ON SFCoverage.COMPANY_C = SFCoverageContact.COVERAGE_TEAM_MEMBER_ACCOUNT_C
                    AND HLEmployee.HL_ID = SFCoverageContact.COVERAGE_OFFICER_ID_C
                LEFT JOIN (SELECT '' COVERAGE_TEAM_C, 1 IS_MAIN_C,'' PRIMARY_SECTOR_C, '' SECONDARY_SECTOR_C, '' TERTIARY_SECTOR_C ) COVERAGESECTOR ON SFCoverage.ID = COVERAGESECTOR.COVERAGE_TEAM_C
                LEFT JOIN (SELECT '' ID ) SECTORVALUE ON COVERAGESECTOR.PRIMARY_SECTOR_C = SECTORVALUE.ID
                    AND COVERAGESECTOR.IS_MAIN_C = 1
                LEFT JOIN (SELECT '' ID ) SECONDARYSECTOR ON COVERAGESECTOR.SECONDARY_SECTOR_C = SECONDARYSECTOR.ID
                LEFT OUTER JOIN (SELECT '' ID ) TERTIARYSECTOR ON COVERAGESECTOR.TERTIARY_SECTOR_C = TERTIARYSECTOR.ID
                    AND COVERAGESECTOR.IS_MAIN_C = 1
                LEFT JOIN (
                    SELECT COVERAGE_TEAM_MEMBER_ACCOUNT__C
                        ,COVERAGE_OFFICER_ID__C
                        ,LISTAGG(TO_VARCHAR(COVERAGE_CONTACT_NAME_FORMULA__C), '\\\\\\\\n') WITHIN
                    GROUP (
                            ORDER BY COVERAGE_CONTACT_NAME_FORMULA__C
                            ) AS COVERAGE_CONTACT_NAME_FORMULA__C_COMBINED
                    FROM (
                        SELECT COVERAGE_TEAM_MEMBER_ACCOUNT_C AS COVERAGE_TEAM_MEMBER_ACCOUNT__C
                            ,COVERAGE_OFFICER_ID_C AS COVERAGE_OFFICER_ID__C
                            ,COVERAGE_CONTACT_NAME_FORMULA_C AS COVERAGE_CONTACT_NAME_FORMULA__C
                        FROM {{ref('TGT_HL','VW_COVERAGE_CONTACT_C')}}
                        GROUP BY COVERAGE_TEAM_MEMBER_ACCOUNT_C
                            ,COVERAGE_OFFICER_ID_C
                            ,COVERAGE_CONTACT_NAME_FORMULA_C
                        ) AS COVERAGE_CONTACT_NAME_FORMULA__C
                    GROUP BY COVERAGE_TEAM_MEMBER_ACCOUNT__C
                        ,COVERAGE_OFFICER_ID__C
                    ) SFCoverageContact_combined ON SFCoverage.COMPANY_C = SFCoverageContact_combined.COVERAGE_TEAM_MEMBER_ACCOUNT__C
                    AND HLEmployee.HL_ID = SFCoverageContact_combined.COVERAGE_OFFICER_ID__C
                LEFT JOIN {{ref('TGT_HL','TMP_COCOVERAGEOFFICER')}} AS CoCoverageOfficer 
                    ON CoCoverageOfficer.COCOVERAGE_COMPANY = SFCompany.ID
                    AND SFCoverage.COVERAGE_TEAM_STATUS_C = 'Active'
                LEFT JOIN {{ref('TGT_HL','VW_ACCOUNT')}} AS SFParentCompany 
                    ON SFCompany.ULTIMATE_PARENT_C = SFParentCompany.ID
                LEFT JOIN {{ref('TGT_HL','TMP_CLIENT_CONTACTS')}} AS CLIENT_CONTACTS ON CLIENT_CONTACTS.COMPANY_ID = SFCoverage.COMPANY_C
                    AND HLEmployee.HL_ID = CLIENT_CONTACTS.COVERAGE_OFFICER_ID
                LEFT JOIN {{ref('TGT_HL','TMP_FSCG')}} AS FSCG ON SFCompany.ID = FSCG.PORTFOLIO_SF_ID
                LEFT JOIN {{ref('TGT_HL','TMP_INVESTMENT_CONTACTS')}} AS INVESTMENT_CONTACTS ON SFCompany.ID = INVESTMENT_CONTACTS.PORTFOLIO_SF_ID
                    AND HLEmployee.HL_ID = INVESTMENT_CONTACTS.COVERAGE_OFFICER_ID
                LEFT JOIN {{ref('TGT_HL','TMP_SPONSOR_RANKING')}} AS SPONSOR_RANKING ON SFCompany.ID = SPONSOR_RANKING.PORTFOLIO_SF_ID
                LEFT JOIN (
                    SELECT DISTINCT PORTFOLIO_SF_ID
                        ,LISTAGG(DISTINCT(TO_VARCHAR(PE_NAME)), '\\\\\\\\n') /*WITHIN GROUP(ORDER BY PE_NAME)*/ AS Combined_PE_Name
                        ,COALESCE(TO_CHAR(MAX(PE_Investment_Date), 'MM/yyyy'), '') AS INVESTMENT_DATE
                    FROM (
                        SELECT PORTFOLIO_SF_ID
                            ,CASE 
                                WHEN UPPER(PORTFOLIO_OWNERSHIP) = UPPER('Public Equity')
                                    AND UPPER(HOLDING_TYPE) IN ( 
                                        UPPER('Majority')
                                        ,UPPER('MINORITY')
                                        )
                                    THEN PE_Name
                                WHEN UPPER(PORTFOLIO_OWNERSHIP) <> UPPER('Public Equity')
                                    OR PORTFOLIO_OWNERSHIP IS NULL
                                    THEN PE_Name
                                END AS PE_NAME
                            ,MAX(PE_Investment_Date) PE_Investment_Date
                        FROM {{ref('TGT_HL','TMP_FSCG')}}
                        GROUP BY PORTFOLIO_SF_ID
                            ,PORTFOLIO_OWNERSHIP
                            ,HOLDING_TYPE
                            ,PE_NAME
                        ) AS PE_Name
                    
                    GROUP BY PORTFOLIO_SF_ID
                    ) AS FSCG1 ON SFCompany.ID = FSCG1.PORTFOLIO_SF_ID
                LEFT JOIN (
                    SELECT DISTINCT PORTFOLIO_SF_ID
                        ,LISTAGG(TO_VARCHAR(FS_COVERAGE_OFFICER), '\\\\\\\\n') WITHIN
                    GROUP (
                            ORDER BY FS_COVERAGE_OFFICER
                            ) AS COMBINED_FS_COVERAGE_OFFICER
                    FROM (
                        SELECT PORTFOLIO_SF_ID
                            ,FS_COVERAGE_OFFICER
                        FROM {{ref('TGT_HL','TMP_FSCG')}}
                        GROUP BY PORTFOLIO_SF_ID
                            ,FS_COVERAGE_OFFICER
                        ) AS FS_COVERAGE_OFFICER
                    GROUP BY PORTFOLIO_SF_ID
                    ) AS FSCG2 ON SFCompany.ID = FSCG2.PORTFOLIO_SF_ID
                LEFT JOIN {{ref('TGT_HL','TMP_COVERAGE_ACTIVITY')}} AS CoverageActivity1 ON SFCompany.ID = CoverageActivity1.Activity_Company_ID
                    AND HLEmployee.HL_ID = CoverageActivity1.HL_Attendee_ID 
                    AND CoverageActivity1.Activity_Date_Rank = 1
                LEFT JOIN {{ref('TGT_HL','TMP_WINNING_MANDATE_CHECKLIST')}} AS WINNING_MANDATE_CHECKLIST ON SFCompany.ID = WINNING_MANDATE_CHECKLIST.COMPANY_ID
                    AND HLEmployee.HL_ID = WINNING_MANDATE_CHECKLIST.COVERAGE_OFFICER_ID
                    AND WINNING_MANDATE_CHECKLIST.WINNING_MANDATE_POINTS > 0
                LEFT JOIN (
                    SELECT account.id
                        ,CASE 
                            WHEN UPPER(coalesce(CONCAT (
                                        region.EXTERNAL_APPLICATION_VALUE_C
                                        ,CASE 
                                            WHEN subregion.external_application_value_c IS NULL
                                                THEN ''
                                            ELSE CONCAT (
                                                    ' | '
                                                    ,SubRegion.external_application_value_c
                                                    )
                                            END
                                        ), 'OTHER')) = UPPER('Pan-EU | Middle Atlantic')
                                THEN 'Pan-EU'
                            ELSE coalesce(CONCAT (
                                        region.EXTERNAL_APPLICATION_VALUE_C
                                        ,CASE 
                                            WHEN subregion.external_application_value_c IS NULL
                                                THEN ''
                                            ELSE CONCAT (
                                                    ' | '
                                                    ,SubRegion.external_application_value_c
                                                    )
                                            END
                                        ), 'OTHER')
                            END Region
                    FROM {{ref('TGT_HL','VW_ACCOUNT')}} ACCOUNT
                    LEFT JOIN {{ref('TGT_HL','SF_MAPPING_C')}} Region ON account.BILLING_COUNTRY = region.SF_VALUE_C
                        AND UPPER(region.FIELD_TYPE_C) = UPPER('Region') AND Region._fivetran_deleted = 'false' 
                    LEFT JOIN {{ref('TGT_HL','SF_MAPPING_C')}} SubRegion ON (
                            CASE 
                                WHEN UPPER(account.billing_country) = UPPER('United States')
                                    THEN account.billing_state
                                ELSE account.BILLING_COUNTRY
                                END
                            ) = SubRegion.sf_value_c
                        AND UPPER(SubRegion.field_type_c) = UPPER('SubRegion')
                        AND SubRegion._fivetran_deleted = 'false'
                    ) REGION_MAPPING ON REGION_MAPPING.ID = SFCompany.ID

            	)
        dependencies:
          - locationName: TGT_HL
            nodeName: SF_MAPPING_C
          - locationName: TGT_HL
            nodeName: TMP_CLIENT_CONTACTS
          - locationName: TGT_HL
            nodeName: TMP_COCOVERAGEOFFICER
          - locationName: TGT_HL
            nodeName: TMP_COVERAGE_ACTIVITY
          - locationName: TGT_HL
            nodeName: TMP_EXCHANGERATES
          - locationName: TGT_HL
            nodeName: TMP_FSCG
          - locationName: TGT_HL
            nodeName: TMP_HLEMPLOYEE
          - locationName: TGT_HL
            nodeName: TMP_INVESTMENT_CONTACTS
          - locationName: TGT_HL
            nodeName: TMP_SPONSOR_RANKING
          - locationName: TGT_HL
            nodeName: TMP_WINNING_MANDATE_CHECKLIST
          - locationName: TGT_HL
            nodeName: VW_ACCOUNT
          - locationName: TGT_HL
            nodeName: VW_COVERAGE_CONTACT_C
          - locationName: TGT_HL
            nodeName: VW_COVERAGE_TEAM_C
        join:
          joinCondition: |2
                SELECT DISTINCT HLEmployee.HL_ID AS CONTACT_ID
                    ,HLEmployee.LOGIN_ID__C AS LOGIN_ID
                    ,HLEmployee.FULL_NAME AS FULL_NAME
                    ,SFCoverage.ID AS CoverageTeam_ID
                    ,HLEmployee.LINE_OF_BUSINESS AS LINE_OF_BUSINESS
                    ,HLEmployee.TITLE AS TITLE
                    ,HLEmployee.OFFICE AS OFFICE
                    ,HLEmployee.INDUSTRY_UMBRELLA_REPORTING AS INDUSTRY_UMBRELLA_REPORTING
                    ,HLEmployee.CF_STAFF_INDUSTRY AS CF_STAFF_INDUSTRY
                    ,SFCoverage.COVERAGE_LEVEL_C AS COVERAGE_LEVEL
                    ,SFCoverage.COMPANY_C AS Company_ID
                    ,SFCompany.WEBSITE AS WEBSITE
                    ,TRIM(REPLACE(CoCoverageOfficer.COMBINED_COVERAGE_OFFICER, CONCAT (
                                CONCAT (
                                    LEFT(HLEmployee.FULL_NAME, CHARINDEX(',', HLEmployee.FULL_NAME) - 1)
                                    ,'('
                                    ,SFCoverage.TIER_C
                                    )
                                ,')'
                                ,CASE 
                                    WHEN UPPER(SFCoverage.COVERAGE_LEVEL_C) = UPPER('Primary')
                                        THEN '*'
                                    ELSE ''
                                    END
                                ,''
                                ))) AS CoCoverageOfficer
                    ,TRIM(REPLACE(CoCoverageOfficer.PRIMARY_COVERAGE_OFFICER, CONCAT (
                                CONCAT (
                                    LEFT(HLEmployee.FULL_NAME, CHARINDEX(',', HLEmployee.FULL_NAME) - 1)
                                    ,'('
                                    ,SFCoverage.TIER_C
                                    )
                                ,')'
                                ,CASE 
                                    WHEN UPPER(SFCoverage.COVERAGE_TEAM_STATUS_C) = UPPER('Active')
                                        AND UPPER(SFCoverage.COVERAGE_LEVEL_C) = UPPER('Primary')
                                        THEN '*'
                                    ELSE ''
                                    END
                                ,''
                                ))) AS PRIMARY_COVERAGE_OFFICER
                    ,TRIM(REPLACE(CoCoverageOfficer.OTHER_COVERAGE_OFFICER, CONCAT (
                                CONCAT (
                                    LEFT(HLEmployee.FULL_NAME, CHARINDEX(',', HLEmployee.FULL_NAME) - 1)
                                    ,'('
                                    ,SFCoverage.TIER_C
                                    )
                                ,')'
                                ,CASE 
                                    WHEN UPPER(SFCoverage.COVERAGE_TEAM_STATUS_C) = UPPER('Active')
                                        AND UPPER(SFCoverage.COVERAGE_LEVEL_C) = UPPER('Primary')
                                        THEN '*'
                                    ELSE ''
                                    END
                                ,''
                                ))) AS OTHER_COVERAGE_OFFICER
                    ,CASE 
                        WHEN UPPER(SFCompany.RECORD_TYPE_ID) = UPPER('012i0000000tEhAAAU')
                            THEN 'Operating Company'
                        WHEN UPPER(SFCompany.RECORD_TYPE_ID) LIKE UPPER('012i0000000tEhFAAU%')
                            THEN 'Capital Provider'
                        ELSE SFCompany.RECORD_TYPE_ID
                        END AS Company_RecordType
                    ,COALESCE(SFCoverage.COMPANY_COVERAGE_STATUS_C, '') AS COMPANY_COVERAGE_STATUS
                    ,SFCoverage.COVERAGE_TEAM_STATUS_C AS COVERAGE_TEAM_STATUS
                    ,SFCompany.NAME AS Company_Name
                    ,CASE
                        WHEN SFCompany.DESCRIPTION IS NOT NULL THEN ''
                        ELSE NULL
                        END AS Company_Description
                    ,TO_VARCHAR(SFCompany.BILLING_CITY) AS Company_City
                    ,TO_VARCHAR(SFCompany.BILLING_COUNTRY) AS Company_Country
                    ,CASE 
                        WHEN SFCompany.BILLING_CITY IS NULL
                            THEN SFCompany.BILLING_COUNTRY_CODE
                        ELSE CONCAT (
                                SFCompany.BILLING_CITY
                                ,','
                                ,SFCompany.BILLING_COUNTRY_CODE
                                )
                        END AS LOCATION
                    ,REGION_MAPPING.REGION AS REGION
                    ,CASE 
                        WHEN FSCG1.COMBINED_PE_NAME IS NOT NULL
                            THEN FSCG1.COMBINED_PE_NAME
                        ELSE COALESCE(SFParentCompany.NAME, '')
                        END AS PARENT_SPONSOR_COMPANY_Combined
                    ,COALESCE(FSCG.FS_COVERAGE_OFFICER, '') AS FS_Coverage_Officer
                    ,COALESCE(FSCG2.COMBINED_FS_COVERAGE_OFFICER, '') AS FS_Coverage_Officer_Combined 
                    ,FSCG1.INVESTMENT_DATE AS Sponsor_Investment_Date
                    ,CASE 
                        WHEN SFCoverage.COVERAGE_TYPE_C IS NOT NULL
                            THEN SFCoverage.COVERAGE_TYPE_C
                        ELSE COALESCE(SFCompany.INDUSTRY_UMBRELLA_REPORTING_C, '')
                        END AS Company_INDUSTRY
                    ,REPLACE(COVERAGESECTOR.PRIMARY_SECTOR_C, ' ', '') AS Company_PRIMARY_SECTOR
                    ,COALESCE(LEFT(COVERAGESECTOR.SECONDARY_SECTOR_C,80), '') AS COMPANY_SECONDARY_SECTOR
                    ,COALESCE(LEFT(COVERAGESECTOR.PRIMARY_SECTOR_C,80), '') AS Company_SECTOR
                    ,TO_VARCHAR(COALESCE(SFCoverage.DESCRIPTION_C, '')) AS Company_Notes
                    ,CASE 
                        WHEN UPPER(SFCompany.OWNERSHIP) LIKE UPPER('%public%')
                            THEN 'Public'
                        WHEN SFCompany.TICKER_SYMBOL <> ''
                            THEN 'Public'
                        WHEN SFCompany.TICKER_SYMBOL IS NOT NULL
                            THEN 'Public'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (
                                 UPPER('ESOP')
                                ,UPPER('Family Owned')
                                ,UPPER('Management')
                                ,UPPER('Not for Profit')
                                ,UPPER('Private')
                                )
                            THEN 'Private'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (
                                UPPER('Family Office')
                                ,UPPER('Hedge Fund')
                                ,UPPER('Private Equity Group')
                                )
                            THEN 'PE'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (UPPER('Government'))
                            THEN 'Other'
                        WHEN UPPER(SFCompany.OWNERSHIP) IN (
                                UPPER('Public Debt')
                                ,UPPER('Public Equity')
                                )
                            THEN 'Public'
                        WHEN SFCompany.OWNERSHIP IS NULL
                            OR SFCompany.OWNERSHIP = ''
                            THEN 'Other'
                        ELSE SFCompany.OWNERSHIP
                        END Company_Ownership
                    ,SFCompany.OWNERSHIP AS Ownership
                    ,SFCompany.REVENUE_MM_C AS Company_Revenue_MM 
                    ,SFCompany.RECENT_REVENUE_MM_C AS Company_RECENT_REVENUE_MM 
                    ,IFNULL(SFCompany.RECENT_EV_MM_C , 0) AS Company_EV_MM
                    ,IFNULL(SFCompany.RECENT_EV_MM_C ,0) AS Company_RECENT_EV_MM 
                    ,SFCompany.EBITDA_MM_C AS Company_EBITDA_MM 
                    ,SFCompany.RECENT_EBITDA_MM_C AS Company_RECENT_EBITDA_MM 
                    ,SFCompany.CURRENCY_ISO_CODE AS Company_CurrencyCode
                    ,SFCoverage.TIER_C AS Company_TIER
                    ,COALESCE(SFCoverage.PRIORITY_C, '') AS Company_PRIORITY
                    ,COALESCE(SFCoverage.ARRANGED_BY_R_D_C, '') AS ARRANGED_BY_R_D__C
                    ,SFCoverage.INTRO_CONVERSATION_OCCURRED_DATE_C AS INTRO_CONVERSATION_OCCURRED_DATE
                    ,SFCOVERAGE.PROFILE_DATE_COMPLETED_C AS INTRO_CALL_BOOKED_DATE
                    ,CASE 
                        WHEN UPPER(ARRANGED_BY_R_D_C) = UPPER('Yes')
                            AND (
                                SFCoverage.INTRO_CONVERSATION_OCCURRED_DATE_C IS NULL
                                AND SFCOVERAGE.PROFILE_DATE_COMPLETED_C IS NULL
                                )
                            THEN 'Contacted'
                        WHEN UPPER(ARRANGED_BY_R_D__C) = UPPER('Yes')
                            AND (
                                SFCoverage.INTRO_CONVERSATION_OCCURRED_DATE_C IS NOT NULL
                                OR SFCOVERAGE.PROFILE_DATE_COMPLETED_C IS NOT NULL
                                )
                            THEN 'Contacted + Intro Booked'
                        ELSE 'Not Contacted'
                        END AS CALLS_BOOKED_VIA_ACE_DEV_TEAM
                    ,CASE 
                        WHEN ARRANGED_BY_R_D__C = 'Yes'
                            THEN SFCoverage.ID
                        END AS NO_OF_INTROS
                    ,SFCoverage.TARGET_TRANSACTION_DATE_C AS Company_Target_Transaction_Date
                    ,SFCoverage.TARGET_ENGAGEMENT_DATE_C AS Company_Target_Engagement_Date
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_7DAYS, 0) AS ACTIVITY_WITHIN_7DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_30DAYS, 0) AS ACTIVITY_WITHIN_30DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_90DAYS, 0) AS ACTIVITY_WITHIN_90DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_180DAYS, 0) AS ACTIVITY_WITHIN_180DAYS
                    ,COALESCE(CoverageActivity1.ACTIVITY_WITHIN_365DAYS, 0) AS ACTIVITY_WITHIN_365DAYS
                    ,COALESCE(CoverageActivity1.Future_Activity, 0) AS Future_Activity
                    ,MAX(TO_VARCHAR(CoverageActivity1.Activity_Date, 'YYYY-MM-DD')) OVER (
                        PARTITION BY HLEmployee.FULL_NAME
                        ,SFCoverage.COMPANY_C
                        ) AS Last_Activity
                    ,MAX(CoverageActivity1.Activity_Internal_Notes) OVER (
                        PARTITION BY HLEmployee.FULL_NAME
                        ,SFCoverage.COMPANY_C
                        ) AS Last_Activity_Synopsis
                    ,MAX(CoverageActivity1.Event_ID) OVER (
                        PARTITION BY HLEmployee.FULL_NAME
                        ,SFCoverage.COMPANY_C
                        ) AS Last_Activity_ID
                    ,EXCHANGE_RATE.currencysymbol AS CURRENCY_SYMBOL
                    ,SPONSOR_RANKING.COMBINED_SPONSOR_RANKING AS SPONSOR_RANKING
                    ,INVESTMENT_CONTACTS.INVESTMENT_CONTACTS AS INVESTMENT_CONTACTS
                    ,CLIENT_CONTACTS.CLIENT_CONTACTS AS CLIENT_CONTACTS
                    ,CONCAT (
                        IFNULL(INITIALS, '')
                        ,'-'
                        ,SFCoverage.NEXT_STEPS_C
                        ) AS NEXT_STEPS
                    ,WINNING_MANDATE_DESC AS WINNING_MANDATE_DESC
                    ,WINNING_MANDATE_POINTS AS WINNING_MANDATE_POINTS
                    ,PE_ATTENDED_PLATINUM_EVENT AS PE_ATTENDED_PLATINUM_EVENT
                    ,MET_WITH_SPONSOR_DEAL_TEAM AS MET_WITH_SPONSOR_DEAL_TEAM
                    ,MET_MANAGEMENT AS MET_MANAGEMENT
                    ,PRESENTED_AT_CONFERENCE AS PRESENTED_AT_CONFERENCE
                    ,MARKET_MAPS_POINTS AS MARKET_MAPS
                    ,DISCUSSED_CAPITAL_MARKETS_POINTS AS DISCUSSED_CAPITAL_MARKETS
                    ,IFNULL(SFCompany.RECENT_EV_MM_C, 0) * RATE2BASE AS EV_MM_USD
                    ,REPLACE(TO_VARCHAR(SFCoverage.EXPECTED_PRODUCTS_C), ';', '\\\\\\\\n') AS EXPECTED_PRODUCTS
                    ,COVERAGESECTOR.PRIMARY_SECTOR_C AS PRIMARY_SECTOR
                    ,COVERAGESECTOR.SECONDARY_SECTOR_C AS SECONDARY_SECTOR
                    ,COVERAGESECTOR.TERTIARY_SECTOR_C AS TERTIARY_SECTOR
                FROM {{ref('TGT_HL','TMP_HLEMPLOYEE')}} AS HLEmployee
                LEFT JOIN {{ref('TGT_HL','VW_COVERAGE_TEAM_C')}} AS SFCoverage 
                    ON HLEmployee.HL_ID = SFCoverage.OFFICER_C
                    AND UPPER(SFCoverage.COVERAGE_TEAM_STATUS_C) = UPPER('Active')
                INNER JOIN {{ref('TGT_HL','VW_ACCOUNT')}} AS SFCompany 
                    ON SFCoverage.COMPANY_C = SFCompany.ID
                INNER JOIN {{ref('TGT_HL','TMP_EXCHANGERATES')}} AS EXCHANGE_RATE 
                        ON SFCompany.CURRENCY_ISO_CODE = EXCHANGE_RATE.CURRENCY
                LEFT JOIN {{ref('TGT_HL','VW_COVERAGE_CONTACT_C')}} AS SFCoverageContact  
                    ON SFCoverage.COMPANY_C = SFCoverageContact.COVERAGE_TEAM_MEMBER_ACCOUNT_C
                    AND HLEmployee.HL_ID = SFCoverageContact.COVERAGE_OFFICER_ID_C
                LEFT JOIN (SELECT '' COVERAGE_TEAM_C, 1 IS_MAIN_C,'' PRIMARY_SECTOR_C, '' SECONDARY_SECTOR_C, '' TERTIARY_SECTOR_C ) COVERAGESECTOR ON SFCoverage.ID = COVERAGESECTOR.COVERAGE_TEAM_C
                LEFT JOIN (SELECT '' ID ) SECTORVALUE ON COVERAGESECTOR.PRIMARY_SECTOR_C = SECTORVALUE.ID
                    AND COVERAGESECTOR.IS_MAIN_C = 1
                LEFT JOIN (SELECT '' ID ) SECONDARYSECTOR ON COVERAGESECTOR.SECONDARY_SECTOR_C = SECONDARYSECTOR.ID
                LEFT OUTER JOIN (SELECT '' ID ) TERTIARYSECTOR ON COVERAGESECTOR.TERTIARY_SECTOR_C = TERTIARYSECTOR.ID
                    AND COVERAGESECTOR.IS_MAIN_C = 1
                LEFT JOIN (
                    SELECT COVERAGE_TEAM_MEMBER_ACCOUNT__C
                        ,COVERAGE_OFFICER_ID__C
                        ,LISTAGG(TO_VARCHAR(COVERAGE_CONTACT_NAME_FORMULA__C), '\\\\\\\\n') WITHIN
                    GROUP (
                            ORDER BY COVERAGE_CONTACT_NAME_FORMULA__C
                            ) AS COVERAGE_CONTACT_NAME_FORMULA__C_COMBINED
                    FROM (
                        SELECT COVERAGE_TEAM_MEMBER_ACCOUNT_C AS COVERAGE_TEAM_MEMBER_ACCOUNT__C
                            ,COVERAGE_OFFICER_ID_C AS COVERAGE_OFFICER_ID__C
                            ,COVERAGE_CONTACT_NAME_FORMULA_C AS COVERAGE_CONTACT_NAME_FORMULA__C
                        FROM {{ref('TGT_HL','VW_COVERAGE_CONTACT_C')}}
                        GROUP BY COVERAGE_TEAM_MEMBER_ACCOUNT_C
                            ,COVERAGE_OFFICER_ID_C
                            ,COVERAGE_CONTACT_NAME_FORMULA_C
                        ) AS COVERAGE_CONTACT_NAME_FORMULA__C
                    GROUP BY COVERAGE_TEAM_MEMBER_ACCOUNT__C
                        ,COVERAGE_OFFICER_ID__C
                    ) SFCoverageContact_combined ON SFCoverage.COMPANY_C = SFCoverageContact_combined.COVERAGE_TEAM_MEMBER_ACCOUNT__C
                    AND HLEmployee.HL_ID = SFCoverageContact_combined.COVERAGE_OFFICER_ID__C
                LEFT JOIN {{ref('TGT_HL','TMP_COCOVERAGEOFFICER')}} AS CoCoverageOfficer 
                    ON CoCoverageOfficer.COCOVERAGE_COMPANY = SFCompany.ID
                    AND SFCoverage.COVERAGE_TEAM_STATUS_C = 'Active'
                LEFT JOIN {{ref('TGT_HL','VW_ACCOUNT')}} AS SFParentCompany 
                    ON SFCompany.ULTIMATE_PARENT_C = SFParentCompany.ID
                LEFT JOIN {{ref('TGT_HL','TMP_CLIENT_CONTACTS')}} AS CLIENT_CONTACTS ON CLIENT_CONTACTS.COMPANY_ID = SFCoverage.COMPANY_C
                    AND HLEmployee.HL_ID = CLIENT_CONTACTS.COVERAGE_OFFICER_ID
                LEFT JOIN {{ref('TGT_HL','TMP_FSCG')}} AS FSCG ON SFCompany.ID = FSCG.PORTFOLIO_SF_ID
                LEFT JOIN {{ref('TGT_HL','TMP_INVESTMENT_CONTACTS')}} AS INVESTMENT_CONTACTS ON SFCompany.ID = INVESTMENT_CONTACTS.PORTFOLIO_SF_ID
                    AND HLEmployee.HL_ID = INVESTMENT_CONTACTS.COVERAGE_OFFICER_ID
                LEFT JOIN {{ref('TGT_HL','TMP_SPONSOR_RANKING')}} AS SPONSOR_RANKING ON SFCompany.ID = SPONSOR_RANKING.PORTFOLIO_SF_ID
                LEFT JOIN (
                    SELECT DISTINCT PORTFOLIO_SF_ID
                        ,LISTAGG(DISTINCT(TO_VARCHAR(PE_NAME)), '\\\\\\\\n') /*WITHIN GROUP(ORDER BY PE_NAME)*/ AS Combined_PE_Name
                        ,COALESCE(TO_CHAR(MAX(PE_Investment_Date), 'MM/yyyy'), '') AS INVESTMENT_DATE
                    FROM (
                        SELECT PORTFOLIO_SF_ID
                            ,CASE 
                                WHEN UPPER(PORTFOLIO_OWNERSHIP) = UPPER('Public Equity')
                                    AND UPPER(HOLDING_TYPE) IN ( 
                                        UPPER('Majority')
                                        ,UPPER('MINORITY')
                                        )
                                    THEN PE_Name
                                WHEN UPPER(PORTFOLIO_OWNERSHIP) <> UPPER('Public Equity')
                                    OR PORTFOLIO_OWNERSHIP IS NULL
                                    THEN PE_Name
                                END AS PE_NAME
                            ,MAX(PE_Investment_Date) PE_Investment_Date
                        FROM {{ref('TGT_HL','TMP_FSCG')}}
                        GROUP BY PORTFOLIO_SF_ID
                            ,PORTFOLIO_OWNERSHIP
                            ,HOLDING_TYPE
                            ,PE_NAME
                        ) AS PE_Name
                    
                    GROUP BY PORTFOLIO_SF_ID
                    ) AS FSCG1 ON SFCompany.ID = FSCG1.PORTFOLIO_SF_ID
                LEFT JOIN (
                    SELECT DISTINCT PORTFOLIO_SF_ID
                        ,LISTAGG(TO_VARCHAR(FS_COVERAGE_OFFICER), '\\\\\\\\n') WITHIN
                    GROUP (
                            ORDER BY FS_COVERAGE_OFFICER
                            ) AS COMBINED_FS_COVERAGE_OFFICER
                    FROM (
                        SELECT PORTFOLIO_SF_ID
                            ,FS_COVERAGE_OFFICER
                        FROM {{ref('TGT_HL','TMP_FSCG')}}
                        GROUP BY PORTFOLIO_SF_ID
                            ,FS_COVERAGE_OFFICER
                        ) AS FS_COVERAGE_OFFICER
                    GROUP BY PORTFOLIO_SF_ID
                    ) AS FSCG2 ON SFCompany.ID = FSCG2.PORTFOLIO_SF_ID
                LEFT JOIN {{ref('TGT_HL','TMP_COVERAGE_ACTIVITY')}} AS CoverageActivity1 ON SFCompany.ID = CoverageActivity1.Activity_Company_ID
                    AND HLEmployee.HL_ID = CoverageActivity1.HL_Attendee_ID 
                    AND CoverageActivity1.Activity_Date_Rank = 1
                LEFT JOIN {{ref('TGT_HL','TMP_WINNING_MANDATE_CHECKLIST')}} AS WINNING_MANDATE_CHECKLIST ON SFCompany.ID = WINNING_MANDATE_CHECKLIST.COMPANY_ID
                    AND HLEmployee.HL_ID = WINNING_MANDATE_CHECKLIST.COVERAGE_OFFICER_ID
                    AND WINNING_MANDATE_CHECKLIST.WINNING_MANDATE_POINTS > 0
                LEFT JOIN (
                    SELECT account.id
                        ,CASE 
                            WHEN UPPER(coalesce(CONCAT (
                                        region.EXTERNAL_APPLICATION_VALUE_C
                                        ,CASE 
                                            WHEN subregion.external_application_value_c IS NULL
                                                THEN ''
                                            ELSE CONCAT (
                                                    ' | '
                                                    ,SubRegion.external_application_value_c
                                                    )
                                            END
                                        ), 'OTHER')) = UPPER('Pan-EU | Middle Atlantic')
                                THEN 'Pan-EU'
                            ELSE coalesce(CONCAT (
                                        region.EXTERNAL_APPLICATION_VALUE_C
                                        ,CASE 
                                            WHEN subregion.external_application_value_c IS NULL
                                                THEN ''
                                            ELSE CONCAT (
                                                    ' | '
                                                    ,SubRegion.external_application_value_c
                                                    )
                                            END
                                        ), 'OTHER')
                            END Region
                    FROM {{ref('TGT_HL','VW_ACCOUNT')}} ACCOUNT
                    LEFT JOIN {{ref('TGT_HL','SF_MAPPING_C')}} Region ON account.BILLING_COUNTRY = region.SF_VALUE_C
                        AND UPPER(region.FIELD_TYPE_C) = UPPER('Region') AND Region._fivetran_deleted = 'false' 
                    LEFT JOIN {{ref('TGT_HL','SF_MAPPING_C')}} SubRegion ON (
                            CASE 
                                WHEN UPPER(account.billing_country) = UPPER('United States')
                                    THEN account.billing_state
                                ELSE account.BILLING_COUNTRY
                                END
                            ) = SubRegion.sf_value_c
                        AND UPPER(SubRegion.field_type_c) = UPPER('SubRegion')
                        AND SubRegion._fivetran_deleted = 'false'
                    ) REGION_MAPPING ON REGION_MAPPING.ID = SFCompany.ID
        name: TMP_COVERAGE_TEMP
        noLinkRefs: []
  name: TMP_COVERAGE_TEMP
  overrideSQL: true
  schema: ""
  sqlType: "154"
  type: sql
  version: 1
type: Node
